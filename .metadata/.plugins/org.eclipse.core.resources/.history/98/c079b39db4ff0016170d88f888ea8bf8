import java.util.*;
import java.util.Scanner;

public class nQueens {
	static int N;
	static boolean[] colUsed;
	static int[] board;
	static boolean[] sum;
	static boolean[] diff;
	static List<List<String>> ans;
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner in = new Scanner(System.in);
		N = in.nextInt();
		colUsed = new boolean[N+1];
		sum = new boolean[5*N];
		diff = new boolean[5*N];
		ans = new ArrayList<>();
	}
	
	public static void rQueens (int row) {
		if (row > N)
			//printSolution();
		for (int c = 1; c <= N; c++) {
			int s = row + c;
			int d = row - c + N;
			if (!colUsed[c] && !diff[d] && !sum[s]) {
				colUsed[c] = sum[s] = diff[d] = true;
				board[row] = c;
				rQueens(row + 1);
				colUsed[c] = sum[s] = diff[d] = false;
				board[row] = 0;
			}
		}
	}
	
	public static void addSolToList() {
		ArrayList<String> boardStrings = new ArrayList<String>();
		for (int i = 0; i < N; i++) {
			char[] row = {'.', '.', '.', '.'};
			row[board[i+1] - 1] = 'Q';
			boardStrings.add(row.toString());
		}
		ans.add(boardStrings);
	}

}
